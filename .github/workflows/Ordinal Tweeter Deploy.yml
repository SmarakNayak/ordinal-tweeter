# This is a workflow that deploys an ordinal tweeter
name: Ordinal Tweeter Deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Tweeter-Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ vars.SERVER_USER }}
          SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
          SSH_HOST: ${{ vars.SERVER_HOST }}

      - name: Stop the server if running
        run: |
          ssh staging 'sudo systemctl is-active tweeter.service && sudo systemctl stop tweeter.service || echo "tweeter not running";'    

      - name: Check out the new code from Github
        run: ssh staging 'git -C ordinal-tweeter fetch && git -C ordinal-tweeter reset --hard origin/main || git clone git@github.com:SmarakNayak/ordinal-tweeter.git'

      - name: Create Ord config file
        run: ssh staging 'printf "%s\n" "${{format('bearer_token{0} ', ':')}}${{secrets.BEARER_TOKEN}}"
                                        "${{format('consumer_key{0} ', ':')}}${{secrets.CONSUMER_KEY}}"
                                        "${{format('consumer_secret{0} ', ':')}}${{secrets.CONSUMER_SECRET}}"
                                        "${{format('access_token{0} ', ':')}}${{secrets.ACCESS_TOKEN}}"
                                        "${{format('access_token_secret{0} ', ':')}}${{secrets.ACCESS_TOKEN_SECRET}}" > ~/twitter.yaml'
      
      - name: Get python dependencies
        run: |
          ssh staging 'sudo apt-get install -y python3-venv'
          ssh staging 'cd ordinal-tweeter; python3 -m venv venv;'
          ssh staging 'cd ordinal-tweeter; source venv/bin/activate; python3 -m pip install -r requirements.txt'
          
      - name: Set up systemd services
        run: ssh staging 'sudo cp ordinal-tweeter/tweeter.service /etc/systemd/system/tweeter.service; sudo systemctl daemon-reload;'
      
      - name: Start the app
        if: ${{ always() }}
        run: ssh staging 'sudo systemctl start tweeter.service;'
